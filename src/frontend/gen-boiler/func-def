#This file contains the function prototypes and
#annotations for arguments. The .h and .c files
#for the functions defined will be generated 
#using the boiler plate generation script.
#Arguments annotated with the keyword "read"
#must be read and captured.


#Most commonly used read, write and close functions
int close(read int fd);
int creat(read const char *pathname, read mode_t mode);
int creat64(read const char *pathname, read mode_t mode);
int fclose(read FILE *fp);
int fgetc(read FILE *stream);
char *fgets(char *s, read int size, read FILE *stream);
FILE *fopen(read const char *path, read const char *mode);
FILE *fopen64(read const char *path, read const char *mode);
#int fprintf(read FILE *stream, const char *format, ...);
int fputc(int c, read FILE *stream);
int fputs(const char *s, read FILE *stream);
size_t fread(void *ptr, read size_t size, read size_t nmemb, read FILE *stream);
#int fscanf(read FILE *stream, const char *format, ...);
size_t fwrite(const void *ptr, read size_t size, read size_t nmemb, read FILE *stream);
int getc(read FILE *stream);
int getchar(void);
__ssize_t getline(char **lineptr, read size_t *n, read FILE *stream);
#int open(read const char *pathname, read int flags);
#int open(read const char *pathname, read int flags, read mode_t mode);
#int open64(read const char *pathname, read int flags);
#int open64(read const char *pathname, read int flags, read mode_t mode);
#int printf(const char *format, ...);
int putc(int c, read FILE *stream);
int putchar(int c);
int puts(const char *s);
ssize_t read(read int fd, void *buf, read size_t count);
#int scanf(const char *format, ...);
int vfprintf(read FILE *stream, const char *format, va_list ap);
int vprintf(const char *format, va_list ap);
int vscanf(const char *format, va_list ap);
int vfscanf(read FILE *stream, const char *format, va_list ap);
ssize_t write(read int fd, const void *buf, read size_t count);


#File pointer position related functions
int fseek(read FILE *stream, read long offset, read int whence);
int fseeko(read FILE *stream, read off_t offset, read int whence);
int fsetpos(read FILE *stream, const fpos_t *pos);
int fsetpos64(read FILE *stream, const fpos64_t *pos);
off_t lseek(read int fd, read off_t offset, read int whence);
off64_t lseek64(read int fd, read off64_t offset, read int whence);
void rewind(read FILE *stream);

#File permission related functions
int chmod(read const char *path, read mode_t mode);
int chown(read const char *path, read uid_t owner, read gid_t group);
int fchmod(read int fd, read mode_t mode);
int fchmodat(read int dirfd, read const char *pathname, read mode_t mode, read int flags);
int fchown(read int fd, read uid_t owner, read gid_t group);
int fchownat(read int dirfd, read const char *pathname, read uid_t owner, read gid_t group, read int flags);
int lchown(read const char *path, read uid_t owner, read gid_t group);

#Other important file related functions
int dup(read int oldfd);
int dup2(read int oldfd, read int newfd);
int dup3(read int oldfd, read int newfd, read int flags);
int ftruncate(read int fd, read off_t length);
int ftruncate64(read int fd, read off64_t length);
int remove(read const char *pathname);
int rename(read const char *oldpath, read const char *newpath);
int symlink(read const char *oldpath, read const char *newpath);
int truncate(read const char *path, read off_t length);
int truncate64(read const char *path, read off64_t length);
int unlink(read const char *pathname);

#Stat Functions
int __fxstat(int __ver, read int fd, struct stat *buf);
int __fxstat64(int __ver, read int fd, struct stat64 *buf);
int __lxstat(int __ver, read const char *path, struct stat *buf);
int __lxstat64(int __ver, read const char *path, struct stat64 *buf);
int __xstat(int __ver, read const char *path, struct stat *buf);
int __xstat64(int __ver, read const char *path, struct stat64 *buf);

#Directory related functions

#Process attributes related functions
