#This file contains the function prototypes and
#annotations for arguments. The .h and .c files
#for the functions defined will be generated 
#using the boiler plate generation script.
#Arguments annotated with the keyword "read"
#must be read and captured.


#Most commonly used read, write and close functions
int close(read int fd);
int creat(read const char *pathname, read mode_t mode);
int creat64(read const char *pathname, read mode_t mode);
int fclose(read FILE *fp);
int fcloseall(void);
FILE *fdopen(read int fd, read const char *mode);
int fgetc(read FILE *stream);
char *fgets(char *s, read int size, read FILE *stream);
FILE *fopen(read const char *path, read const char *mode);
FILE *fopen64(read const char *path, read const char *mode);
int fputc(int c, read FILE *stream);
int fputs(const char *s, read FILE *stream);
size_t fread(void *ptr, read size_t size, read size_t nmemb, read FILE *stream);
FILE *freopen(read const char *path, read const char *mode, read FILE *stream);
FILE *freopen64(read const char *filename, read const char *type, read FILE *stream);
size_t fwrite(const void *ptr, read size_t size, read size_t nmemb, read FILE *stream);
int getc(read FILE *stream);
int getchar(void);
__ssize_t getline(char **lineptr, read size_t *n, read FILE *stream);
int putc(int c, read FILE *stream);
int putchar(int c);
int puts(const char *s);
ssize_t pread(read int fd, void *buf, read size_t count, read off_t offset);
ssize_t pwrite(read int fd, const void *buf, read size_t count, read off_t offset);
ssize_t read(read int fd, void *buf, read size_t count);
int vfprintf(read FILE *stream, const char *format, va_list ap);
int vprintf(const char *format, va_list ap);
int vscanf(const char *format, va_list ap);
int vfscanf(read FILE *stream, const char *format, va_list ap);
ssize_t write(read int fd, const void *buf, read size_t count);

#ISOc99 Scanf
int __isoc99_vscanf(const char *format, va_list ap);
int __isoc99_vfscanf(read FILE *stream, const char *format, va_list ap);

#Unlocked IO functions
int getc_unlocked(read FILE *stream);
int getchar_unlocked(void);
int putc_unlocked(int c, read FILE *stream);
int putchar_unlocked(int c);
int fgetc_unlocked(read FILE *stream);
int fputc_unlocked(int c, read FILE *stream);
size_t fread_unlocked(void *ptr, read size_t size, read size_t n, read FILE *stream);
size_t fwrite_unlocked(const void *ptr, read size_t size, read size_t n, read FILE *stream);
char *fgets_unlocked(char *s, int n, read FILE *stream);
int fputs_unlocked(const char *s, read FILE *stream);

#File pointer position related functions
int fseek(read FILE *stream, read long offset, read int whence);
int fseeko(read FILE *stream, read off_t offset, read int whence);
int fsetpos(read FILE *stream, const fpos_t *pos);
int fsetpos64(read FILE *stream, const fpos64_t *pos);
off_t lseek(read int fd, read off_t offset, read int whence);
off64_t lseek64(read int fd, read off64_t offset, read int whence);
void rewind(read FILE *stream);

#File permission related functions
int chmod(read const char *path, read mode_t mode);
int chown(read const char *path, read uid_t owner, read gid_t group);
int fchmod(read int fd, read mode_t mode);
int fchmodat(read int dirfd, read const char *pathname, read mode_t mode, read int flags);
int fchown(read int fd, read uid_t owner, read gid_t group);
int fchownat(read int dirfd, read const char *pathname, read uid_t owner, read gid_t group, read int flags);
int lchown(read const char *path, read uid_t owner, read gid_t group);

#Other important file related functions
int dup(read int oldfd);
int dup2(read int oldfd, read int newfd);
int dup3(read int oldfd, read int newfd, read int flags);
int ftruncate(read int fd, read off_t length);
int ftruncate64(read int fd, read off64_t length);
int link(read const char *path1, read const char *path2);
int mkdir(read const char *pathname, read mode_t mode);
int mkfifo(read const char *pathname, read mode_t mode);
int remove(read const char *pathname);
int rename(read const char *oldpath, read const char *newpath);
int rmdir(read const char *pathname);
int symlink(read const char *oldpath, read const char *newpath);
int system(read const char *command);
int truncate(read const char *path, read off_t length);
int truncate64(read const char *path, read off64_t length);
int unlink(read const char *pathname);
mode_t umask(read mode_t mask);
int utime(read const char *filename, const struct utimbuf *times);

#P* commands
FILE *popen(read const char *command, read const char *type);
int pclose(read FILE *stream);

#Tempfile Creation
int mkstemp(read char *templ);
int mkostemp(read char *templ, read int flags);
int mkstemps(read char *templ, int suffixlen);
int mkostemps(read char *templ, int suffixlen, read int flags);
FILE *tmpfile(void);
FILE *tmpfile64(void);

#Stat Functions
int __fxstat(int __ver, read int fd, struct stat *buf);
int __fxstat64(int __ver, read int fd, struct stat64 *buf);
int __lxstat(int __ver, read const char *path, struct stat *buf);
int __lxstat64(int __ver, read const char *path, struct stat64 *buf);
int __xstat(int __ver, read const char *path, struct stat *buf);
int __xstat64(int __ver, read const char *path, struct stat64 *buf);

#Directory related functions

#Process attributes related functions
int chdir(read const char *path);
int fchdir(read int fd);
int killpg(read int pgrp, read int sig);
int seteuid(read uid_t euid);
int setegid(read gid_t egid);
int setgid(read gid_t gid);
int setreuid(read uid_t ruid, read uid_t euid);
int setregid(read gid_t rgid, read gid_t egid);
int setuid(read uid_t uid);

#Environment functions
int clearenv(void);
int putenv(read char *string);
int setenv(read const char *name, read const char *value, read int overwrite);
int unsetenv(read const char *name);
