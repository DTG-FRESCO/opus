package fresco.opus.DBObjects;

enum ObjType {
    META = 1;
    GLOBAL = 2;
    PROCESS = 3;
    LOCAL = 4;
    EVENT = 5;
    ANNOT = 6;
    TERM = 7;
}

enum LinkState {
    NONE = 0;
    CoT = 1;
    READ = 2;
    WRITE = 3;
    RaW = 4;
    CLOSED = 5;
    DELETED = 6;
}

message Link {
    optional int64 id = 1; //Object record pointer
    optional LinkState state = 2 [default = NONE]; //Enum values to represent pointer type
}

message MetaObj {
    optional string name = 1;
    optional string value = 2;
    optional int64 timestamp = 3;
    optional Link prev_version = 4;
}

message GlobalObj {
    repeated string name = 1; //Name of the data source e.g. file name

    repeated Link prev_version = 2; //List of pointers to previous versions
    repeated Link next_version = 3; //List of pointers to next versions
    repeated Link process_object = 4; //List of pointers to process objects
    repeated Link file_meta = 5;
}

message ProcObj {
    optional string proc_name = 1; //Process name, different from executable name
    optional int64 pid = 2; //Process ID

    optional Link parent = 3; //Link to parent process object
    repeated Link child = 4; //Links to each child

    optional Link prev_version = 5; //Processes can version on exec
    optional Link next_version = 6; //Processes can version on exec

    optional Link process_events = 7; //Link to chain of process events (EventObj)

    repeated Link local_object = 8; //Links to local objects

    repeated Link lib = 9; //Link to meta object libraries
    repeated Link env = 10; //Link to meta object environment variables
    repeated Link other_meta = 11; //Link to other meta-data
    repeated Link annot_object = 12; //Link to annotation object
}

message LocalObj {
    optional string name = 1; //File descriptor number or handle name
    optional Link process_object = 2; //Link to process object
    optional Link prev_version = 3; //Link to previous version
    optional Link next_version = 7; //Link to the next version
    repeated Link file_object = 4; //Link to file object
    optional int64 ref_count = 5; //Reference count for hard links
    optional Link io_events = 6; //Link to IO event chain (EventObj)
}

message EventObj {
    optional string fn = 1;//Semi-required
    optional Link prev = 2;//Semi-required 
    optional int32 ret = 3;//Semi-required
    optional int64 user_time = 4;//Semi-required
    optional int64 before_time = 5;//Semi-required
    optional int64 after_time = 6;//Semi-required

    message KVPair{
        optional string key = 1;
        optional string value = 2;
    }

    repeated KVPair additional = 7;
}

message AnnotationObj {
    optional string desc = 1; //Description of annotation
    optional bytes data_blob = 2; //Blob of data e.g messages arriving late
}

message TermMarkerObj {
    
    enum TermState {
        SHUTDOWN = 1;
        CRASH = 2;
    }

    optional TermState reason = 1;
    optional int64 downtime_start = 2;
    optional int64 downtime_end = 3;

    message KVPair{
        optional int64 key = 1;
        optional int64 value = 2;
    }

    repeated KVPair id_state = 4;
}